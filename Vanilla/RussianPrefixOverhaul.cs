using System.Collections.Generic;
using CalamityRuTranslate.Common;
using CalamityRuTranslate.Utilities;
using Terraria;
using Terraria.ID;
using Terraria.ModLoader;

namespace CalamityRuTranslate.Vanilla
{
    public class RussianPrefixOverhaul : GlobalItem
    {
        //Мужской, Женский, Средний, Множественный
        private static string[][] _prefixes = {
            new [] {"Искусный", "Искусная", "Искусное", "Искусные"},
            new [] {"Проворный", "Проворная", "Проворное", "Проворные"},
            new [] {"Надоедливый", "Надоедливая", "Надоедливое", "Надоедливые"},
            new [] {"Таинственный", "Таинственная", "Таинственное", "Таинственные"},
            new [] {"Укреплённый", "Укреплённая", "Укреплённое", "Укреплённые"},
            new [] {"Отвратительный", "Отвратительная", "Отвратительное", "Отвратительные"},
            new [] {"Неудобный", "Неудобная", "Неудобное", "Неудобные"},
            new [] {"Юркий", "Юркая", "Юркое", "Юркие"},
            new [] {"Сломанный", "Сломанная", "Сломанное", "Сломанные"},
            new [] {"Громоздкий", "Громоздкая", "Громоздкое", "Громоздкие"},
            new [] {"Небесный", "Небесная", "Небесное", "Небесные"},
            new [] {"Повреждённый", "Повреждённая", "Повреждённое", "Повреждённые"},
            new [] {"Опасный", "Опасная", "Опасное", "Опасные"},
            new [] {"Смертоносный", "Смертоносная", "Смертоносное", "Смертоносные"},
            new [] {"Демонический", "Демоническая", "Демоническое", "Демонические"},
            new [] {"Безумный", "Безумная", "Безумное", "Безумные"},
            new [] {"Притуплённый", "Притуплённая", "Притуплённое", "Притуплённые"},
            new [] {"Стремительный", "Стремительная", "Стремительное", "Стремительные"},
            new [] {"Неистовый", "Неистовая", "Неистовое", "Неистовые"},
            new [] {"Буйный", "Буйная", "Буйное", "Буйные"},
            new [] {"Яростный", "Яростная", "Яростное", "Яростные"},
            new [] {"Праведный", "Праведная", "Праведное", "Праведные"},
            new [] {"Охранный", "Охранная", "Охранное", "Охранные"},
            new [] {"Твёрдый", "Твёрдая", "Твёрдое", "Твёрдые"},
            new [] {"Поспешный", "Поспешная", "Поспешное", "Поспешные"},
            new [] {"Тяжёлый", "Тяжёлая", "Тяжёлое", "Тяжёлые"},
            new [] {"Пагубный", "Пагубная", "Пагубное", "Пагубные"},
            new [] {"Никчёмный", "Никчёмная", "Никчёмное", "Никчёмные"},
            new [] {"Непригодный", "Непригодная", "Непригодное", "Непригодные"},
            new [] {"Мощный", "Мощная", "Мощное", "Мощные"},
            new [] {"Устрашающий", "Устрашающая", "Устрашающее", "Устрашающие"},
            new [] {"Отважный", "Отважная", "Отважное", "Отважные"},
            new [] {"Зазубренный", "Зазубренная", "Зазубренное", "Зазубренные"},
            new [] {"Заточенный", "Заточенная", "Заточенное", "Заточенные"},
            new [] {"Большой", "Большая", "Большое", "Большие"},
            new [] {"Лентяйский", "Лентяйская", "Лентяйское", "Лентяйские"},
            new [] {"Легендарный", "Легендарная", "Легендарное", "Легендарные"},
            new [] {"Апатичный", "Апатичная", "Апатичное", "Апатичные"},
            new [] {"Лёгкий", "Лёгкая", "Лёгкое", "Лёгкие"},
            new [] {"Везучий", "Везучая", "Везучее", "Везучие"},
            new [] {"Маниакальный", "Маниакальная", "Маниакальное", "Маниакальные"},
            new [] {"Массивный", "Массивная", "Массивное", "Массивные"},
            new [] {"Умелый", "Умелая", "Умелое", "Умелые"},
            new [] {"Грозный", "Грозная", "Грозное", "Грозные"},
            new [] {"Убийственный", "Убийственная", "Убийственное", "Убийственные"},
            new [] {"Мистический", "Мистическая", "Мистическое", "Мистические"},
            new [] {"Загадочный", "Загадочная", "Загадочное", "Загадочные"},
            new [] {"Пакостный", "Пакостная", "Пакостное", "Пакостные"},
            new [] {"Шустрый", "Шустрая", "Шустрое", "Шустрые"},
            new [] {"Заострённый", "Заострённая", "Заострённое", "Заострённые"},
            new [] {"Точный", "Точная", "Точное", "Точные"},
            new [] {"Быстрый", "Быстрая", "Быстрое", "Быстрые"},
            new [] {"Скоростной", "Скоростная", "Скоростное", "Скоростные"},
            new [] {"Безудержный", "Безудержная", "Безудержное", "Безудержные"},
            new [] {"Безжалостный", "Безжалостная", "Безжалостное", "Безжалостные"},
            new [] {"Кровожадный", "Кровожадная", "Кровожадное", "Кровожадные"},
            new [] {"Позорный", "Позорная", "Позорное", "Позорные"},
            new [] {"Острый", "Острая", "Острое", "Острые"},
            new [] {"Некачественный", "Некачественная", "Некачественное", "Некачественные"},
            new [] {"Меткий", "Меткая", "Меткое", "Меткие"},
            new [] {"Медлительный", "Медлительная", "Медлительное", "Медлительные"},
            new [] {"Вялый", "Вялая", "Вялое", "Вялые"},
            new [] {"Маленький", "Маленькая", "Маленькое", "Маленькие"},
            new [] {"Шипастый", "Шипастая", "Шипастое", "Шипастые"},
            new [] {"Надёжный", "Надёжная", "Надёжное", "Надёжные"},
            new [] {"Усиленный", "Усиленная", "Усиленное", "Усиленные"},
            new [] {"Превосходный", "Превосходная", "Превосходное", "Превосходные"},
            new [] {"Запретный", "Запретная", "Запретное", "Запретные"},
            new [] {"Ужасный", "Ужасная", "Ужасное", "Ужасные"},
            new [] {"Крошечный", "Крошечная", "Крошечное", "Крошечные"},
            new [] {"Неудачный", "Неудачная", "Неудачное", "Неудачные"},
            new [] {"Неприятный", "Неприятная", "Неприятное", "Неприятные"},
            new [] {"Нереальный", "Нереальная", "Нереальное", "Нереальные"},
            new [] {"Жестокий", "Жестокая", "Жестокое", "Жестокие"},
            new [] {"Оберегающий", "Оберегающая", "Оберегающее", "Оберегающие"},
            new [] {"Слабый", "Слабая", "Слабое", "Слабые"},
            new [] {"Дикий", "Дикая", "Дикое", "Дикие"},
            new [] {"Пылкий", "Пылкая", "Пылкое", "Пылкие"},
            new [] {"Безупречный", "Безупречная", "Безупречное", "Безупречные"},
            new [] {"Обтекаемый", "Обтекаемая", "Обтекаемое", "Обтекаемые"},
            new [] {"Увесистый", "Увесистая", "Увесистое", "Увесистые"},
            new [] {"Могучий", "Могучая", "Могучее", "Могучие"},
            new [] {"Выдающийся", "Выдающаяся", "Выдающееся", "Выдающиеся"},
            new [] {"Свирепый", "Свирепая", "Свирепое", "Свирепые"},
            new [] {"Убойный", "Убойная", "Убойное", "Убойные"},
            new [] {"Радикальный", "Радикальная", "Радикальное", "Радикальные"},
            new [] {"Грубый", "Грубая", "Грубое", "Грубые"},
            new [] {"Хрупкий", "Хрупкая", "Хрупкое", "Хрупкие"},
            new [] {"Несбалансированный", "Несбалансированная", "Несбалансированное", "Несбалансированные"},
            new [] {"Тихий", "Тихая", "Тихое", "Тихие"},
            new [] {"Скрытый", "Скрытая", "Скрытое", "Скрытые"},
            new [] {"Замаскированный", "Замаскированная", "Замаскированное", "Замаскированные"},
            new [] {"Безмолвный", "Безмолвная", "Безмолвное", "Безмолвные"}
        };
        
        //Женский
        private static List<int?> _typeW = new List<int?>
        {
            ItemID.BoneGlove,
            ItemID.LuckyHorseshoe,
            ItemID.Ruler,
            ItemID.BlizzardinaBottle,
            ItemID.HighTestFishingLine,
            ItemID.AnglerEarring,
            ItemID.FrogLeg,
            ItemID.LaserRuler,
            ItemID.BalloonPufferfish,
            ItemID.RedString,
            ItemID.OrangeString,
            ItemID.YellowString,
            ItemID.LimeString,
            ItemID.GreenString,
            ItemID.TealString,
            ItemID.CyanString,
            ItemID.SkyBlueString,
            ItemID.BlueString,
            ItemID.PurpleString,
            ItemID.VioletString,
            ItemID.PinkString,
            ItemID.BrownString,
            ItemID.WhiteString,
            ItemID.RainbowString,
            ItemID.BlackString,
            ItemID.SandstorminaBottle,
            ItemID.FartinaJar,
            ItemID.HandWarmer,
            ItemID.Toolbox,
            ItemID.ObsidianRose,
            ItemID.PortableCementMixer,
            ItemID.GoblinTech,
            ItemID.MechanicalLens,
            ItemID.ObsidianHorseshoe,
            ItemID.MoonCharm,
            ItemID.SorcererEmblem,
            ItemID.WarriorEmblem,
            ItemID.RangerEmblem,
            ItemID.TitanGlove,
            ItemID.Blindfold,
            ItemID.TrifoldMap,
            ItemID.SandstorminaBalloon,
            ItemID.BlizzardinaBalloon,
            ItemID.FartInABalloon,
            ItemID.SummonerEmblem,
            ItemID.YoYoGlove,
            ItemID.NeptunesShell,
            ItemID.DiscountCard,
            ItemID.LuckyCoin,
            ItemID.PowerGlove,
            ItemID.CountercurseMantra,
            ItemID.AvengerEmblem,
            ItemID.Hoverboard,
            ItemID.CelestialEmblem,
            ItemID.MoonShell,
            ItemID.StarVeil,
            ItemID.MechanicalGlove,
            ItemID.DestroyerEmblem,
            ItemID.FireGauntlet,
            ItemID.BundleofBalloons,
            ItemID.CelestialShell,
            ItemID.BejeweledValkyrieWing,
            ItemID.LeinforsWings,
            ItemID.WingsNebula,
            ItemID.CobaltChainsaw,
            ItemID.MythrilChainsaw,
            ItemID.AdamantiteChainsaw,
            ItemID.FleshGrinder,
            ItemID.BloodLustCluster,
            ItemID.PalladiumChainsaw,
            ItemID.OrichalcumChainsaw,
            ItemID.TitaniumChainsaw,
            ItemID.ChlorophyteChainsaw,
            ItemID.SawtoothShark,
            ItemID.ButchersChainsaw,
            ItemID.CactusPickaxe,
            ItemID.TinPickaxe,
            ItemID.CopperPickaxe,
            ItemID.IronPickaxe,
            ItemID.LeadPickaxe,
            ItemID.SilverPickaxe,
            ItemID.BonePickaxe,
            ItemID.TungstenPickaxe,
            ItemID.CnadyCanePickaxe,
            ItemID.GoldPickaxe,
            ItemID.PlatinumPickaxe,
            ItemID.NightmarePickaxe,
            ItemID.DeathbringerPickaxe,
            ItemID.MoltenPickaxe,
            ItemID.ReaverShark,
            ItemID.CobaltPickaxe,
            ItemID.PalladiumPickaxe,
            ItemID.MythrilPickaxe,
            ItemID.OrichalcumPickaxe,
            ItemID.AdamantitePickaxe,
            ItemID.TitaniumPickaxe,
            ItemID.ChlorophytePickaxe,
            ItemID.SpectrePickaxe,
            ItemID.ShroomiteDiggingClaw,
            ItemID.VortexPickaxe,
            ItemID.NebulaPickaxe,
            ItemID.SolarFlarePickaxe,
            ItemID.StardustPickaxe,
            ItemID.Minishark,
            ItemID.Blowpipe,
            ItemID.Sickle,
            ItemID.Vilethorn,
            ItemID.SnowballCannon,
            ItemID.DD2LightningAuraT2Popper,
            ItemID.ZombieArm,
            ItemID.BladedGlove,
            ItemID.TheRottedFork,
            ItemID.TheMeatball,
            ItemID.Katana,
            ItemID.TaxCollectorsStickOfDoom,
            ItemID.CrimsonYoyo,
            ItemID.SpaceGun,
            ItemID.Muramasa,
            ItemID.ClockworkAssaultRifle,
            ItemID.Swordfish,
            ItemID.JungleYoyo,
            ItemID.DyeTradersScimitar,
            ItemID.WaspGun,
            ItemID.Starfury,
            ItemID.Valor,
            ItemID.BlueMoon,
            ItemID.PurpleClubberfish,
            ItemID.BookStaff,
            ItemID.Megashark,
            ItemID.MagicMissile,
            ItemID.LaserRifle,
            ItemID.CobaltNaginata,
            ItemID.BookofSkulls,
            ItemID.Sandgun,
            ItemID.MoltenFury,
            ItemID.MagicalHarp,
            ItemID.PalladiumPike,
            ItemID.Sunfury,
            ItemID.DemonScythe,
            ItemID.MythrilHalberd,
            ItemID.SlapHand,
            ItemID.OrichalcumHalberd,
            ItemID.AdamantiteGlaive,
            ItemID.PiranhaGun,
            ItemID.Flamelash,
            ItemID.Marrow,
            ItemID.KOCannon,
            ItemID.ElectrosphereLauncher,
            ItemID.ShadowFlameHexDoll,
            ItemID.NightsEdge,
            ItemID.IceSickle,
            ItemID.DD2FlameburstTowerT2Popper,
            ItemID.CandyCornRifle,
            ItemID.RainbowGun,
            ItemID.Xenopopper,
            ItemID.MedusaHead,
            ItemID.MonkStaffT2,
            ItemID.ToxicFlask,
            ItemID.ChlorophyteSaber,
            ItemID.MagnetSphere,
            ItemID.Cutlass,
            ItemID.Frostbrand,
            ItemID.ChargedBlasterCannon,
            ItemID.VortexBeater,
            ItemID.DartRifle,
            ItemID.StarCannon,
            ItemID.DeathSickle,
            ItemID.DD2ExplosiveTrapT2Popper,
            ItemID.DaoofPow,
            ItemID.ScourgeoftheCorruptor,
            ItemID.ApprenticeStaffT3,
            ItemID.SnowmanCannon,
            ItemID.DD2BallistraTowerT2Popper,
            ItemID.ObsidianSwordfish,
            ItemID.BubbleGun,
            ItemID.MonkStaffT3,
            ItemID.TrueNightsEdge,
            ItemID.LastPrism,
            ItemID.LunarFlareBook,
            ItemID.StarWrath,
            ItemID.DayBreak,
            ModsCall.FargoSouls?.ItemType("ApprenticesEssence"),
            ModsCall.FargoSouls?.ItemType("BarbariansEssence"),
            ModsCall.FargoSouls?.ItemType("OccultistsEssence"),
            ModsCall.FargoSouls?.ItemType("SharpshootersEssence"),
            ModsCall.FargoSouls?.ItemType("CosmoForce"),
            ModsCall.FargoSouls?.ItemType("EarthForce"),
            ModsCall.FargoSouls?.ItemType("LifeForce"),
            ModsCall.FargoSouls?.ItemType("NatureForce"),
            ModsCall.FargoSouls?.ItemType("ShadowForce"),
            ModsCall.FargoSouls?.ItemType("SpiritForce"),
            ModsCall.FargoSouls?.ItemType("TerraForce"),
            ModsCall.FargoSouls?.ItemType("TimberForce"),
            ModsCall.FargoSouls?.ItemType("WillForce"),
            ModsCall.FargoSouls?.ItemType("AgitatingLens"),
            ModsCall.FargoSouls?.ItemType("CelestialRune"),
            ModsCall.FargoSouls?.ItemType("DubiousCircuitry"),
            ModsCall.FargoSouls?.ItemType("IceQueensCrown"),
            ModsCall.FargoSouls?.ItemType("PumpkingsCape"),
            ModsCall.FargoSouls?.ItemType("ReinforcedPlating"),
            ModsCall.FargoSouls?.ItemType("SaucerControlConsole"),
            ModsCall.FargoSouls?.ItemType("SinisterIcon"),
            ModsCall.FargoSouls?.ItemType("SqueakyToy"),
            ModsCall.FargoSouls?.ItemType("SupremeDeathbringerFairy"),
            ModsCall.FargoSouls?.ItemType("ArchWizardsSoul"),
            ModsCall.FargoSouls?.ItemType("ColossusSoul"),
            ModsCall.FargoSouls?.ItemType("ConjuristsSoul"),
            ModsCall.FargoSouls?.ItemType("DimensionSoul"),
            ModsCall.FargoSouls?.ItemType("EternitySoul"),
            ModsCall.FargoSouls?.ItemType("FlightMasterySoul"),
            ModsCall.FargoSouls?.ItemType("GladiatorsSoul"),
            ModsCall.FargoSouls?.ItemType("MasochistSoul"),
            ModsCall.FargoSouls?.ItemType("SnipersSoul"),
            ModsCall.FargoSouls?.ItemType("SupersonicSoul"),
            ModsCall.FargoSouls?.ItemType("TerrariaSoul"),
            ModsCall.FargoSouls?.ItemType("TrawlerSoul"),
            ModsCall.FargoSouls?.ItemType("UniverseSoul"),
            ModsCall.FargoSouls?.ItemType("WorldShaperSoul"),
            ModsCall.FargoSouls?.ItemType("BoneZone"),
            ModsCall.FargoSouls?.ItemType("DestroyerGun"),
            ModsCall.FargoSouls?.ItemType("FishStick"),
            ModsCall.FargoSouls?.ItemType("FleshHand"),
            ModsCall.FargoSouls?.ItemType("Mahoguny"),
            ModsCall.FargoSouls?.ItemType("TophatSquirrelWeapon"),
            ModsCall.FargoSouls?.ItemType("PiranhaGunSummon"),
            ModsCall.FargoSouls?.ItemType("WaspGunSummon"),
            ModsCall.FargoSouls?.ItemType("DestroyerGun2"),
            ModsCall.FargoSouls?.ItemType("DragonBreath2"),
            ModsCall.FargoSouls?.ItemType("HellZone"),
            ModsCall.FargoSouls?.ItemType("SlimeSword"),
            ModsCall.FargoSouls?.ItemType("ComputationOrb"),
            ModsCall.FargoSouls?.ItemType("ParadoxWolfSoul"),
            ModsCall.FargoSouls?.ItemType("MissDrakovisFishingPole"),
        };
        //Средний
        private static List<int?> _typeU = new List<int?>
        {
            ItemID.CloudinaBottle,
            ItemID.PanicNecklace,
            ItemID.WeatherRadio,
            ItemID.CordageGuide,
            ItemID.FishermansGuide,
            ItemID.TsunamiInABottle,
            ItemID.SharkToothNecklace,
            ItemID.JellyfishNecklace,
            ItemID.SweetheartNecklace,
            ItemID.PocketMirror,
            ItemID.DivingGear,
            ItemID.CloudinaBalloon,
            ItemID.ArmorBracing,
            ItemID.GoldRing,
            ItemID.CoinRing,
            ItemID.CharmofMyths,
            ItemID.GreedyRing,
            ItemID.PygmyNecklace,
            ItemID.Yoraiz0rWings,
            ItemID.Spear,
            ItemID.WoodYoyo,
            ItemID.Rally,
            ItemID.AntlionClaw,
            ItemID.RedRyder,
            ItemID.Blowgun,
            ItemID.DarkLance,
            ItemID.Uzi,
            ItemID.FalconBlade,
            ItemID.HelFire,
            ItemID.DD2SquireDemonSword,
            ItemID.DD2BetsyBow,
            ItemID.MushroomSpear,
            ItemID.Tsunami,
            ItemID.FireworksLauncher,
            ItemID.ValkyrieYoyo,
            ItemID.SpiritFlame,
            ItemID.SolarEruption,
            ItemID.NebulaBlaze,
            ItemID.SniperRifle,
            ModsCall.FargoSouls?.ItemType("AdamantiteEnchant"),
            ModsCall.FargoSouls?.ItemType("AncientCobaltEnchant"),
            ModsCall.FargoSouls?.ItemType("AncientShadowEnchant"),
            ModsCall.FargoSouls?.ItemType("AnglerEnchantment"),
            ModsCall.FargoSouls?.ItemType("ApprenticeEnchant"),
            ModsCall.FargoSouls?.ItemType("BeeEnchant"),
            ModsCall.FargoSouls?.ItemType("BeetleEnchant"),
            ModsCall.FargoSouls?.ItemType("BorealWoodEnchant"),
            ModsCall.FargoSouls?.ItemType("CactusEnchant"),
            ModsCall.FargoSouls?.ItemType("ChlorophyteEnchant"),
            ModsCall.FargoSouls?.ItemType("CobaltEnchant"),
            ModsCall.FargoSouls?.ItemType("CopperEnchant"),
            ModsCall.FargoSouls?.ItemType("CrimsonEnchant"),
            ModsCall.FargoSouls?.ItemType("DarkArtistEnchant"),
            ModsCall.FargoSouls?.ItemType("EbonwoodEnchant"),
            ModsCall.FargoSouls?.ItemType("ForbiddenEnchant"),
            ModsCall.FargoSouls?.ItemType("FossilEnchant"),
            ModsCall.FargoSouls?.ItemType("FrostEnchant"),
            ModsCall.FargoSouls?.ItemType("GladiatorEnchant"),
            ModsCall.FargoSouls?.ItemType("GoldEnchant"),
            ModsCall.FargoSouls?.ItemType("HallowEnchant"),
            ModsCall.FargoSouls?.ItemType("HuntressEnchant"),
            ModsCall.FargoSouls?.ItemType("IronEnchant"),
            ModsCall.FargoSouls?.ItemType("JungleEnchant"),
            ModsCall.FargoSouls?.ItemType("LeadEnchant"),
            ModsCall.FargoSouls?.ItemType("MeteorEnchant"),
            ModsCall.FargoSouls?.ItemType("MinerEnchant"),
            ModsCall.FargoSouls?.ItemType("MoltenEnchant"),
            ModsCall.FargoSouls?.ItemType("MonkEnchant"),
            ModsCall.FargoSouls?.ItemType("MythrilEnchant"),
            ModsCall.FargoSouls?.ItemType("NebulaEnchant"),
            ModsCall.FargoSouls?.ItemType("NecroEnchant"),
            ModsCall.FargoSouls?.ItemType("NinjaEnchant"),
            ModsCall.FargoSouls?.ItemType("ObsidianEnchant"),
            ModsCall.FargoSouls?.ItemType("OrichalcumEnchant"),
            ModsCall.FargoSouls?.ItemType("PalladiumEnchant"),
            ModsCall.FargoSouls?.ItemType("PalmWoodEnchant"),
            ModsCall.FargoSouls?.ItemType("PearlwoodEnchant"),
            ModsCall.FargoSouls?.ItemType("PlatinumEnchant"),
            ModsCall.FargoSouls?.ItemType("PumpkinEnchant"),
            ModsCall.FargoSouls?.ItemType("RainEnchant"),
            ModsCall.FargoSouls?.ItemType("RedRidingEnchant"),
            ModsCall.FargoSouls?.ItemType("RichMahoganyEnchant"),
            ModsCall.FargoSouls?.ItemType("ShadewoodEnchant"),
            ModsCall.FargoSouls?.ItemType("ShadowEnchant"),
            ModsCall.FargoSouls?.ItemType("ShinobiEnchant"),
            ModsCall.FargoSouls?.ItemType("ShroomiteEnchant"),
            ModsCall.FargoSouls?.ItemType("SilverEnchant"),
            ModsCall.FargoSouls?.ItemType("SnowEnchant"),
            ModsCall.FargoSouls?.ItemType("SolarEnchant"),
            ModsCall.FargoSouls?.ItemType("SpectreEnchant"),
            ModsCall.FargoSouls?.ItemType("SpiderEnchant"),
            ModsCall.FargoSouls?.ItemType("SpookyEnchant"),
            ModsCall.FargoSouls?.ItemType("SquireEnchant"),
            ModsCall.FargoSouls?.ItemType("StardustEnchant"),
            ModsCall.FargoSouls?.ItemType("TikiEnchant"),
            ModsCall.FargoSouls?.ItemType("TinEnchant"),
            ModsCall.FargoSouls?.ItemType("TitaniumEnchant"),
            ModsCall.FargoSouls?.ItemType("TungstenEnchant"),
            ModsCall.FargoSouls?.ItemType("TurtleEnchant"),
            ModsCall.FargoSouls?.ItemType("ValhallaKnightEnchant"),
            ModsCall.FargoSouls?.ItemType("VortexEnchant"),
            ModsCall.FargoSouls?.ItemType("WizardEnchant"),
            ModsCall.FargoSouls?.ItemType("WoodEnchant"),
            ModsCall.FargoSouls?.ItemType("BetsysHeart"),
            ModsCall.FargoSouls?.ItemType("ConcentratedRainbowMatter"),
            ModsCall.FargoSouls?.ItemType("CorruptHeart"),
            ModsCall.FargoSouls?.ItemType("GuttedHeart"),
            ModsCall.FargoSouls?.ItemType("HeartoftheMasochist"),
            ModsCall.FargoSouls?.ItemType("NecromanticBrew"),
            ModsCall.FargoSouls?.ItemType("PungentEyeball"),
            ModsCall.FargoSouls?.ItemType("PureHeart"),
            ModsCall.FargoSouls?.ItemType("QueenStinger"),
            ModsCall.FargoSouls?.ItemType("SparklingAdoration"),
            ModsCall.FargoSouls?.ItemType("TimsConcoction"),
            ModsCall.FargoSouls?.ItemType("WyvernFeather"),
            ModsCall.FargoSouls?.ItemType("BrainStaff"),
            ModsCall.FargoSouls?.ItemType("DragonBreath"),
            ModsCall.FargoSouls?.ItemType("TheSmallSting"),
            ModsCall.FargoSouls?.ItemType("SparklingLove"),
            ModsCall.FargoSouls?.ItemType("TheBigSting"),
        };
        //Множественный
        private static List<int?> _typePl = new List<int?>
        {
            ItemID.BrainOfConfusion,
            ItemID.CopperWatch,
            ItemID.SilverWatch,
            ItemID.TinWatch,
            ItemID.TungstenWatch,
            ItemID.GoldWatch,
            ItemID.HermesBoots,
            ItemID.Flipper,
            ItemID.Shackle,
            ItemID.PlatinumWatch,
            ItemID.IceSkates,
            ItemID.ClimbingClaws,
            ItemID.ShoeSpikes,
            ItemID.FlurryBoots,
            ItemID.SailfishBoots,
            ItemID.BrainOfConfusion,
            ItemID.MagicCuffs,
            ItemID.RocketBoots,
            ItemID.FeralClaws,
            ItemID.SpectreBoots,
            ItemID.WaterWalkingBoots,
            ItemID.FastClock,
            ItemID.Vitamins,
            ItemID.ObsidianWaterWalkingBoots,
            ItemID.FinWings,
            ItemID.DemonWings,
            ItemID.AngelWings,
            ItemID.ButterflyWings,
            ItemID.FairyWings,
            ItemID.HarpyWings,
            ItemID.BoneWings,
            ItemID.FlameWings,
            ItemID.FrozenWings,
            ItemID.LightningBoots,
            ItemID.LeafWings,
            ItemID.BatWings,
            ItemID.BeeWings,
            ItemID.FestiveWings,
            ItemID.CelestialCuffs,
            ItemID.PutridScent,
            ItemID.LavaWaders,
            ItemID.Tabi,
            ItemID.TatteredFairyWings,
            ItemID.SpookyWings,
            ItemID.FrostsparkBoots,
            ItemID.BeetleWings,
            ItemID.FlowerBoots,
            ItemID.GhostWings,
            ItemID.SteampunkWings,
            ItemID.MasterNinjaGear,
            ItemID.FishronWings,
            ItemID.MothronWings,
            ItemID.BetsyWings,
            ItemID.RedsWings,
            ItemID.DTownsWings,
            ItemID.WillsWings,
            ItemID.CrownosWings,
            ItemID.CenxsWings,
            ItemID.JimsWings,
            ItemID.SkiphsWings,
            ItemID.LokisWings,
            ItemID.ArkhalisWings,
            ItemID.WingsSolar,
            ItemID.WingsStardust,
            ItemID.StylistKilLaKillScissorsIWish,
            ItemID.VampireKnives,
            ItemID.ChainGuillotines,
            ItemID.FetidBaghnakhs,
            ModsCall.FargoSouls?.ItemType("AeolusBoots"),
            ModsCall.FargoSouls?.ItemType("EurusSock"),
            ModsCall.FargoSouls?.ItemType("FusedLens"),
            ModsCall.FargoSouls?.ItemType("MutantAntibodies"),
            ModsCall.FargoSouls?.ItemType("NymphsPerfume"),
            ModsCall.FargoSouls?.ItemType("SandsofTime"),
            ModsCall.FargoSouls?.ItemType("TwinRangs"),
            ModsCall.FargoSouls?.ItemType("GeminiGlaives"),
        };
        
        public override bool Autoload(ref string name)
        {
            On.Terraria.Item.AffixName += delegate(On.Terraria.Item.orig_AffixName orig, Item self)
            {
                if (!ProjectTRuConfig.Instance.NewVanillaTranslation || !Translation.IsRussianLanguage)
                    return orig.Invoke(self);

                if (self.prefix >= Lang.prefix.Length)
                    return self.Name;
                
                string prefix = Lang.prefix[self.prefix].Value;
                if (prefix == string.Empty)
                    return self.Name;

                for (int i = 0; i < _prefixes.Length; i++)
                {
                    if(_prefixes[i][0] == prefix)
                        return GetGenderedPrefix(_prefixes[i], self.type) + " " + self.Name.ToLower();
                }

                return prefix + " " + self.Name;
            };
            return base.Autoload(ref name);
        }

        private string GetGenderedPrefix(string[] prefix, int id)
        {
            if (_typeW.Contains(id))
                return prefix[1];

            if (_typeU.Contains(id))
                return prefix[2];

            if (_typePl.Contains(id))
                return prefix[3];

            return prefix[0];
        }
    }
}